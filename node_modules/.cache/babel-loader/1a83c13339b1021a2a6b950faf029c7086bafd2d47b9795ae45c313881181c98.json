{"ast":null,"code":"var _jsxFileName = \"/Users/lbullen/Desktop/Practice/taskmate/src/components/AddTask.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddTask = () => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2,\n    columnNumber: 10\n  }, this);\n};\n\n// import \"./AddTask.css\";\n// import { useState } from \"react\";\n\n// export const AddTask = ({ tasks, setTasks }) => {\n//   const [taskValue, setTaskValue] = useState(\"\");\n//   const [progress, setProgress] = useState(false);\n\n//   const handleChange = (event) => {\n//     setTaskValue(event.target.value);\n//   };\n\n//   const handleReset = () => {\n//     setTaskValue(\"\");\n//     setProgress(false);\n//   };\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     const task = {\n//       id: Math.floor(Math.random() * 1000),\n//       name: taskValue,\n//       completed: Boolean(progress),\n//     };\n//     console.log(task);\n//     setTasks([...tasks, task]);\n//     handleReset();\n//   };\n\n//   return (\n//     <section className=\"addtask\">\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           onChange={handleChange}\n//           type=\"text\"\n//           name=\"task\"\n//           id=\"task\"\n//           placeholder=\"Task Name\"\n//           autoComplete=\"off\"\n//           value={taskValue}\n//         />\n//         <select\n//           onChange={(event) => setProgress(event.target.value)}\n//           value={progress}\n//         >\n//           <option value={false}>Pending</option>\n//           <option value={true}>Completed</option>\n//         </select>\n//         <button onClick={handleReset} type=\"reset\">\n//           Reset\n//         </button>\n//         <button type=\"submit\">Add Task</button>\n//       </form>\n//     </section>\n//   );\n// };\n_c = AddTask;\nvar _c;\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"names":["AddTask","_jsxDEV","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lbullen/Desktop/Practice/taskmate/src/components/AddTask.js"],"sourcesContent":["export const AddTask = () => {\n  return <section></section>;\n};\n\n// import \"./AddTask.css\";\n// import { useState } from \"react\";\n\n// export const AddTask = ({ tasks, setTasks }) => {\n//   const [taskValue, setTaskValue] = useState(\"\");\n//   const [progress, setProgress] = useState(false);\n\n//   const handleChange = (event) => {\n//     setTaskValue(event.target.value);\n//   };\n\n//   const handleReset = () => {\n//     setTaskValue(\"\");\n//     setProgress(false);\n//   };\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     const task = {\n//       id: Math.floor(Math.random() * 1000),\n//       name: taskValue,\n//       completed: Boolean(progress),\n//     };\n//     console.log(task);\n//     setTasks([...tasks, task]);\n//     handleReset();\n//   };\n\n//   return (\n//     <section className=\"addtask\">\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           onChange={handleChange}\n//           type=\"text\"\n//           name=\"task\"\n//           id=\"task\"\n//           placeholder=\"Task Name\"\n//           autoComplete=\"off\"\n//           value={taskValue}\n//         />\n//         <select\n//           onChange={(event) => setProgress(event.target.value)}\n//           value={progress}\n//         >\n//           <option value={false}>Pending</option>\n//           <option value={true}>Completed</option>\n//         </select>\n//         <button onClick={handleReset} type=\"reset\">\n//           Reset\n//         </button>\n//         <button type=\"submit\">Add Task</button>\n//       </form>\n//     </section>\n//   );\n// };\n"],"mappings":";;AAAA,OAAO,MAAMA,OAAO,GAAGA,CAAA,KAAM;EAC3B,oBAAOC,OAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAkB,CAAC;AAC5B,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAC,EAAA,GA1DaN,OAAO;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}