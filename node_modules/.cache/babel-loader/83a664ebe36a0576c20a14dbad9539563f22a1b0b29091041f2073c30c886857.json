{"ast":null,"code":"var _jsxFileName = \"/Users/lbullen/Desktop/Practice/taskmate/src/components/AddTask.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddTask = ({\n  tasklist,\n  setTasklist,\n  task,\n  setTask\n}) => {\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (task.id) {\n      const date = new Date();\n      const updateTasklist = tasklist.map(todo => todo.id === task.id ? {\n        id: task.id,\n        name: task.name,\n        time: `${date.toLocaleString()}`\n      } : todo);\n      setTasklist(updateTasklist);\n    } else {\n      console.log(event.target.task.value);\n      const date = new Date();\n      const newTask = {\n        id: date.getTime(),\n        name: event.target.task.value,\n        time: `${date.toLocaleString()}`\n      };\n      setTasklist([...tasklist, newTask]);\n      event.target.task.value = \"\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"addTask\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"type\",\n        name: \"task\",\n        value: task.name,\n        autoComplete: \"off\",\n        placeholder: \"add task\",\n        onChange: event => setTask({\n          ...task,\n          name: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n// import \"./AddTask.css\";\n// import { useState } from \"react\";\n\n// export const AddTask = ({ tasks, setTasks }) => {\n//   const [taskValue, setTaskValue] = useState(\"\");\n//   const [progress, setProgress] = useState(false);\n\n//   const handleChange = (event) => {\n//     setTaskValue(event.target.value);\n//   };\n\n//   const handleReset = () => {\n//     setTaskValue(\"\");\n//     setProgress(false);\n//   };\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     const task = {\n//       id: Math.floor(Math.random() * 1000),\n//       name: taskValue,\n//       completed: Boolean(progress),\n//     };\n//     console.log(task);\n//     setTasks([...tasks, task]);\n//     handleReset();\n//   };\n\n//   return (\n//     <section className=\"addtask\">\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           onChange={handleChange}\n//           type=\"text\"\n//           name=\"task\"\n//           id=\"task\"\n//           placeholder=\"Task Name\"\n//           autoComplete=\"off\"\n//           value={taskValue}\n//         />\n//         <select\n//           onChange={(event) => setProgress(event.target.value)}\n//           value={progress}\n//         >\n//           <option value={false}>Pending</option>\n//           <option value={true}>Completed</option>\n//         </select>\n//         <button onClick={handleReset} type=\"reset\">\n//           Reset\n//         </button>\n//         <button type=\"submit\">Add Task</button>\n//       </form>\n//     </section>\n//   );\n// };\n_c = AddTask;\nvar _c;\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"names":["AddTask","tasklist","setTasklist","task","setTask","handleSubmit","event","preventDefault","id","date","Date","updateTasklist","map","todo","name","time","toLocaleString","console","log","target","value","newTask","getTime","_jsxDEV","className","children","onSubmit","type","autoComplete","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lbullen/Desktop/Practice/taskmate/src/components/AddTask.js"],"sourcesContent":["export const AddTask = ({ tasklist, setTasklist, task, setTask }) => {\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (task.id) {\n      const date = new Date();\n      const updateTasklist = tasklist.map((todo) =>\n        todo.id === task.id\n          ? {\n              id: task.id,\n              name: task.name,\n              time: `${date.toLocaleString()}`,\n            }\n          : todo\n      );\n      setTasklist(updateTasklist);\n    } else {\n      console.log(event.target.task.value);\n      const date = new Date();\n      const newTask = {\n        id: date.getTime(),\n        name: event.target.task.value,\n        time: `${date.toLocaleString()}`,\n      };\n      setTasklist([...tasklist, newTask]);\n      event.target.task.value = \"\";\n    }\n  };\n  return (\n    <section className=\"addTask\">\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"type\"\n          name=\"task\"\n          value={task.name}\n          autoComplete=\"off\"\n          placeholder=\"add task\"\n          onChange={(event) => setTask({ ...task, name: event.target.value })}\n        />\n        <button type=\"submit\">Add</button>\n      </form>\n    </section>\n  );\n};\n\n// import \"./AddTask.css\";\n// import { useState } from \"react\";\n\n// export const AddTask = ({ tasks, setTasks }) => {\n//   const [taskValue, setTaskValue] = useState(\"\");\n//   const [progress, setProgress] = useState(false);\n\n//   const handleChange = (event) => {\n//     setTaskValue(event.target.value);\n//   };\n\n//   const handleReset = () => {\n//     setTaskValue(\"\");\n//     setProgress(false);\n//   };\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     const task = {\n//       id: Math.floor(Math.random() * 1000),\n//       name: taskValue,\n//       completed: Boolean(progress),\n//     };\n//     console.log(task);\n//     setTasks([...tasks, task]);\n//     handleReset();\n//   };\n\n//   return (\n//     <section className=\"addtask\">\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           onChange={handleChange}\n//           type=\"text\"\n//           name=\"task\"\n//           id=\"task\"\n//           placeholder=\"Task Name\"\n//           autoComplete=\"off\"\n//           value={taskValue}\n//         />\n//         <select\n//           onChange={(event) => setProgress(event.target.value)}\n//           value={progress}\n//         >\n//           <option value={false}>Pending</option>\n//           <option value={true}>Completed</option>\n//         </select>\n//         <button onClick={handleReset} type=\"reset\">\n//           Reset\n//         </button>\n//         <button type=\"submit\">Add Task</button>\n//       </form>\n//     </section>\n//   );\n// };\n"],"mappings":";;AAAA,OAAO,MAAMA,OAAO,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,WAAW;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EACnE,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAIJ,IAAI,CAACK,EAAE,EAAE;MACX,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;MACvB,MAAMC,cAAc,GAAGV,QAAQ,CAACW,GAAG,CAAEC,IAAI,IACvCA,IAAI,CAACL,EAAE,KAAKL,IAAI,CAACK,EAAE,GACf;QACEA,EAAE,EAAEL,IAAI,CAACK,EAAE;QACXM,IAAI,EAAEX,IAAI,CAACW,IAAI;QACfC,IAAI,EAAG,GAAEN,IAAI,CAACO,cAAc,CAAC,CAAE;MACjC,CAAC,GACDH,IACN,CAAC;MACDX,WAAW,CAACS,cAAc,CAAC;IAC7B,CAAC,MAAM;MACLM,OAAO,CAACC,GAAG,CAACZ,KAAK,CAACa,MAAM,CAAChB,IAAI,CAACiB,KAAK,CAAC;MACpC,MAAMX,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;MACvB,MAAMW,OAAO,GAAG;QACdb,EAAE,EAAEC,IAAI,CAACa,OAAO,CAAC,CAAC;QAClBR,IAAI,EAAER,KAAK,CAACa,MAAM,CAAChB,IAAI,CAACiB,KAAK;QAC7BL,IAAI,EAAG,GAAEN,IAAI,CAACO,cAAc,CAAC,CAAE;MACjC,CAAC;MACDd,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEoB,OAAO,CAAC,CAAC;MACnCf,KAAK,CAACa,MAAM,CAAChB,IAAI,CAACiB,KAAK,GAAG,EAAE;IAC9B;EACF,CAAC;EACD,oBACEG,OAAA;IAASC,SAAS,EAAC,SAAS;IAAAC,QAAA,eAC1BF,OAAA;MAAMG,QAAQ,EAAErB,YAAa;MAAAoB,QAAA,gBAC3BF,OAAA;QACEI,IAAI,EAAC,MAAM;QACXb,IAAI,EAAC,MAAM;QACXM,KAAK,EAAEjB,IAAI,CAACW,IAAK;QACjBc,YAAY,EAAC,KAAK;QAClBC,WAAW,EAAC,UAAU;QACtBC,QAAQ,EAAGxB,KAAK,IAAKF,OAAO,CAAC;UAAE,GAAGD,IAAI;UAAEW,IAAI,EAAER,KAAK,CAACa,MAAM,CAACC;QAAM,CAAC;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrE,CAAC,eACFX,OAAA;QAAQI,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAG;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAC,EAAA,GAlGanC,OAAO;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}